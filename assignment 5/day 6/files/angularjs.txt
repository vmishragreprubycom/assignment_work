----------------------THIS IS FILE 3----------------------------------------
 
   O  o   o  o-o  o   o o      O  o--o      o  o-o  
 / \ |\  | o     |   | |     / \ |   |     | |     
o---o| \ | |  -o |   | |    o---oO-Oo      |  o-o  
|   ||  \| o   | |   | |    |   ||  \  \   o     | 
o   oo   o  o-o   o-o  O---oo   oo   o  o-o  o--o  
                                                   
                                                                                                                  
AngularJS (commonly referred to as "Angular.js" or "AngularJS 1.X") is a JavaScript-based open-source front-end web application framework mainly maintained by Google and by a community of individuals and corporations to address many of the challenges encountered in developing single-page applications. The JavaScript components complement Apache Cordova, the framework used for developing cross-platform mobile apps. It aims to simplify both the development and the testing of such applications by providing a framework for client-side model–view–controller (MVC) and model–view–viewmodel (MVVM) architectures, along with components commonly used in rich Internet applications. In 2014, the original AngularJS team began working on Angular (Application Platform).

The AngularJS framework works by first reading the HTML page, which has embedded into it additional custom tag attributes. Angular interprets those attributes as directives to bind input or output parts of the page to a model that is represented by standard JavaScript variables. The values of those JavaScript variables can be manually set within the code, or retrieved from static or dynamic JSON resources.

According to JavaScript analytics service Libscore, AngularJS is used on the websites of Wolfram Alpha, NBC, Walgreens, Intel, Sprint, ABC News, and approximately 12,000 other sites out of 1 million tested in October 2016.[3] AngularJS is the 10th most starred project of all time on GitHub.[4]

AngularJS is the frontend part of the MEAN stack, consisting of MongoDB database, Express.js web application server framework, Angular.js itself, and Node.js server runtime environment.

Contents  [hide] 
1	AngularJS
2	Scope
3	Bootstrap
4	Two-way data binding
5	Development history
5.1	Releases
5.2	1.6
5.3	Legacy browser support
5.4	Angular and AngularDart
6	Chrome extension
7	Performance
8	See also
9	References
10	Further reading
11	External links
AngularJS[edit]
AngularJS is is built on the belief that declarative programming should be used to create user interfaces and connect software components, while imperative programming is better suited to defining an application's business logic.[5] The framework adapts and extends traditional HTML to present dynamic content through two-way data-binding that allows for the automatic synchronization of models and views. As a result, AngularJS de-emphasizes explicit DOM manipulation with the goal of improving testability and performance.

AngularJS's design goals include:

to decouple DOM manipulation from application logic. The difficulty of this is dramatically affected by the way the code is structured.
to decouple the client side of an application from the server side. This allows development work to progress in parallel, and allows for reuse of both sides.
to provide structure for the journey of building an application: from designing the UI, through writing the business logic, to testing.
Angular implements the MVC pattern to separate presentation, data, and logic components.[6] Using dependency injection, Angular brings traditionally server-side services, such as view-dependent controllers, to client-side web applications. Consequently, much of the burden on the server can be reduced.

Scope[edit]
AngularJS uses the term "scope" in a manner akin to the fundamentals of computer science.

Scope in computer science describes when in the program a particular binding is valid. The ECMA-262 specification defines scope as: a lexical environment in which a Function object is executed in client-side web scripts;[7] akin to how scope is defined in lambda calculus.[8]

As a part of the "MVC" architecture, the scope forms the "Model", and all variables defined in the scope can be accessed by the "View" as well as the "Controller". The scope behaves as a glue and binds the "View" and the "Controller".

In AngularJS, "scope" is a certain kind of object[9] that itself can be in scope or out of scope in any given part of the program, following the usual rules of variable scope in JavaScript like any other object.[10] When the term "scope" is used below, it refers to the Angular scope object and not the scope of a name binding.

Bootstrap[edit]
The tasks performed by the AngularJS bootstrapper occur in three phases[11] after the DOM has been loaded:

Creation of a new Injector
Compilation of the directives that decorate the DOM
Linking of all directives to scope
AngularJS directives allow the developer to specify custom and reusable HTML-like elements and attributes that define data bindings and the behavior of presentation components. Some of the most commonly used directives are:

ng-app
Declares the root element of an AngularJS application, under which directives can be used to declare bindings and define behavior.
ng-bind
Sets the text of a DOM element to the value of an expression. For example, <span ng-bind="name"></span> displays the value of ‘name’ inside the span element. Any change to the variable ‘name’ in the application's scope reflect instantly in the DOM.
ng-model
Similar to ng-bind, but establishes a two-way data binding between the view and the scope.
ng-model-options
Provides tuning for how model updates are done.
ng-class
Lets class attributes be dynamically loaded.
ng-controller
Specifies a JavaScript controller class that evaluates HTML expressions.
ng-repeat
Instantiate an element once per item from a collection.
ng-show & ng-hide
Conditionally show or hide an element, depending on the value of a boolean expression. Show and hide is achieved by setting the CSS display style.
ng-switch
Conditionally instantiate one template from a set of choices, depending on the value of a selection expression.
ng-view
The base directive responsible for handling routes[12] that resolve JSON before rendering templates driven by specified controllers.
ng-if
Basic if statement directive that instantiates the following element if the conditions are true. When the condition is false, the element is removed from the DOM. When true, a clone of the compiled element is re-inserted.
ng-aria
A module for accessibility support of common ARIA attributes.
ng-animate
A module provides support for JavaScript, CSS3 transition and CSS3 keyframe animation hooks within existing core and custom directives.
Since ng-* attributes are not valid in HTML specifications, data-ng-* can also be used as a prefix. For example, both ng-app and data-ng-app are valid in AngularJS.

Two-way data binding[edit]
AngularJS two-way data binding is its most notable feature, largely relieving the server backend of templating responsibilities. Instead, templates are rendered in plain HTML according to data contained in a scope defined in the model. The $scope service in Angular detects changes to the model section and modifies HTML expressions in the view via a controller. Likewise, any alterations to the view are reflected in the model. This circumvents the need to actively manipulate the DOM and encourages bootstrapping and rapid prototyping of web applications.[13] AngularJS detects changes in models by comparing the current values with values stored earlier in a process of dirty-checking, unlike Ember.js and Backbone.js that trigger listeners when the model values are changed.[14]

Development history[edit]
AngularJS was originally developed in 2009 by Miško Hevery[15] at Brat Tech LLC[16] as the software behind an online JSON storage service, that would have been priced by the megabyte, for easy-to-make applications for the enterprise. This venture was located at the web domain "GetAngular.com",[16] and had a few subscribers, before the two decided to abandon the business idea and release Angular as an open-source library.

Releases[edit]
Angular is an incompatible rewrite of AngularJS. Both AngularJS and Angular are currently supported.[17]

1.6[edit]
This release added many of the concepts of Angular to AngularJS, including the concept of a component based architecture. Notably, it also removed the Sandbox, which many developers believed provided additional security, despite numerous vulnerabilities that had been discovered that bypassed the sandbox.

The current stable release of AngularJS is 1.6.4.[18]

Legacy browser support[edit]
Versions 1.2 and later of AngularJS do not support Internet Explorer versions 6 or 7.[19] Versions 1.3 and later of AngularJS dropped support for Internet Explorer 8.[20]

Angular and AngularDart[edit]
Angular 2+ versions are simply called Angular. It is a TypeScript-based open-source front-end web application platform. Angular 4 was announced on 13 December 2016, skipping 3 to avoid a confusion due to the misalignment of the router package's version which was already distributed as v3.3.0.[21]

AngularDart works on Dart, which is an object-oriented, class defined, single inheritance using C# style syntax, that is different from Angular JS (which uses Javascript) and Angular 2/ Angular 4 (which uses Typescript).

Chrome extension[edit]
In July 2012, the Angular team built an extension for the Google Chrome browser called Batarang,[22] that improves the debugging experience for web applications built with Angular. The extension aims to allow for easy detection of performance bottlenecks and offers a GUI for debugging applications.[23] For a time during late 2014 and early 2015, the extension was not compatible with recent releases (after v1.2.x) of Angular.[24] It currently, as of late 2016, still works with all versions of Angular (although there have been no updates to the source code since March 2016[25]).

Performance[edit]
AngularJS sets out the paradigm of a digest cycle. This cycle can be considered a loop, during which Angular checks if there is any change to all the variables watched by all the $scopes. So, if $scope.myVar is defined in a controller and this variable was marked for watching, Angular will monitor the changes on myVar in each loop iteration.

This approach potentially leads to slow rendering when AngularJS checks on too many variables in the $scope every cycle. Hevery suggests keeping fewer than 2000 watchers on any page.[14]

See also[edit]
	Free software portal
React.js
Knockout.js
Comparison of JavaScript frameworks
References[edit]
Jump up ^ Earliest known releases
Jump up ^ "Release v1.6.4". GitHub. Retrieved 2017-03-31.
Jump up ^ "Libscore". libscore.com. Retrieved 2016-10-17.
Jump up ^ "GitHub search results sorted by number of stars".
Jump up ^ "What Is Angular?". Retrieved 12 February 2013.
Jump up ^ Understanding Components
Jump up ^ "Annotated ECMAScript 5.1, Section 10.2 Lexical Environments". Retrieved 2015-01-03.
Jump up ^ Barendregt, Henk; Barendsen, Erik (March 2000), Introduction to Lambda Calculus (PDF)
Jump up ^ "AngularJS: Developer Guide: Scopes". Retrieved 2015-01-03.
Jump up ^ "ECMA-262-3 in detail. Chapter 4. Scope chain.". Retrieved 2015-01-03.
Jump up ^ "Writing Directives". angularjs.org. November 28, 2012. Retrieved 2013-07-21.
Jump up ^ Component Router
Jump up ^ "5 Awesome AngularJS Features". Retrieved 13 February 2013.
^ Jump up to: a b Misko Hevery. "Databinding in angularjs". Retrieved 2014-03-09.
Jump up ^ "Hello World, <angular/> is here". Retrieved 2014-10-12.
^ Jump up to: a b "GetAngular". Angular / BRAT Tech. LLC. Archived from the original on 2010-04-13. Retrieved 2014-10-12.
Jump up ^ Google launches final release version of Angular 2.0 | TechCrunch
Jump up ^ "angular/angular.js". GitHub. Retrieved 2017-02-08.
Jump up ^ "AngularJS: Developer Guide: Internet Explorer Compatibility". Google. Retrieved 2014-10-12.
Jump up ^ Minar, Igor. "AngularJS 1.3: a new release approaches". AngularJS Blog. Retrieved 2014-10-12.
Jump up ^ "Ok... let me explain: it's going to be Angular 4.0". angularjs.blogspot.kr. Retrieved 2016-12-14.
Jump up ^ "angular/angularjs-batarang (GitHub)". Retrieved 2014-10-12.
Jump up ^ Ford, Brian. "Introducing the AngularJS Batarang". AngularJS Blog. Retrieved 2014-10-12.
Jump up ^ "batarang Chrome extension for AngularJS appears broken".
Jump up ^ https://github.com/angular/batarang/graphs/commit-activity
Further reading[edit]
Green, Brad; Seshadri, Shyam (March 22, 2013). AngularJS (1st ed.). O'Reilly Media. p. 150. ISBN 978-1449344856.
Kozlowski, Pawel; Darwin, Peter Bacon (August 23, 2013). Mastering Web Application Development with AngularJS (1st ed.). Packt Publishing. p. 372. ISBN 978-1782161820.
Ruebbelke, Lukas (January 1, 2015). AngularJS in Action (1st ed.). Manning Publications. p. 325. ISBN 978-1617291333.
External links[edit]
	Wikimedia Commons has media related to AngularJS.
Official website
Angularjs Developper Guide
AngularJS User Registration and Login Tutorial
[show] v t e
JavaScript templating libraries
[show] v t e
Rich Internet applications
[show] v t e
Web frameworks
[show] v t e
ECMAScript
[show] v t e
Node.js
Categories: JavaScript librariesAjax (programming)Google softwareRich Internet application frameworksSoftware using the MIT license
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Go
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version
In other projects
Wikimedia Commons
Languages
العربية
Беларуская (тарашкевіца)‎
Български
Català
Čeština
Deutsch
Eesti
Español
فارسی
Français
Հայերեն
Italiano
עברית
Latviešu
Nederlands
日本語
Polski
Português
Русский
Српски / srpski
Suomi
Türkçe
Українська
中文
Edit links
This page was last edited on 19 June 2017, at 01:40.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout Wikipedia

--------------------------------FILE 3 ENDS HERE-----------------------------------------
